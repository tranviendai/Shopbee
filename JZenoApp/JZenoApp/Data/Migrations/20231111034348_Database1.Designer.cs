// <auto-generated />
using System;
using JZenoApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JZenoApp.Migrations
{
    [DbContext(typeof(JZenoDbContext))]
    [Migration("20231111034348_Database1")]
    partial class Database1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JZenoApp.Models.Bill", b =>
                {
                    b.Property<string>("billID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("billStatic")
                        .HasColumnType("int");

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("deliveryForm")
                        .HasColumnType("bit");

                    b.Property<string>("note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("payment")
                        .HasColumnType("bit");

                    b.Property<string>("phone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("voucherID")
                        .HasColumnType("int");

                    b.HasKey("billID");

                    b.HasIndex("UserId");

                    b.HasIndex("voucherID");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("JZenoApp.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = "shirt",
                            icon = "shirt.png",
                            name = "Shirt"
                        },
                        new
                        {
                            Id = "sandal",
                            icon = "sandal.png",
                            name = "Sandal"
                        },
                        new
                        {
                            Id = "shoes",
                            icon = "shoes.png",
                            name = "Shoes"
                        },
                        new
                        {
                            Id = "short",
                            icon = "short.png",
                            name = "Short"
                        },
                        new
                        {
                            Id = "trouser",
                            icon = "trousers.png",
                            name = "Trouser"
                        },
                        new
                        {
                            Id = "camera",
                            icon = "camera.png",
                            name = "Camera"
                        },
                        new
                        {
                            Id = "phone",
                            icon = "phone.png",
                            name = "Phone"
                        },
                        new
                        {
                            Id = "watch",
                            icon = "watch.png",
                            name = "Watch"
                        },
                        new
                        {
                            Id = "computer",
                            icon = "computer.png",
                            name = "Computer"
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.Chat", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("nameActive")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("receiverId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("senderId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("receiverId");

                    b.HasIndex("senderId");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("JZenoApp.Models.ChatDetails", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<string>("chatId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("sendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("senderId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("chatId");

                    b.ToTable("ChatDetail");
                });

            modelBuilder.Entity("JZenoApp.Models.DetailOrder", b =>
                {
                    b.Property<int?>("odID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("odID"));

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("billID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("color")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<int?>("detailStatic")
                        .HasColumnType("int");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("size")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double?>("totalPrice")
                        .HasColumnType("float");

                    b.HasKey("odID");

                    b.HasIndex("billID");

                    b.HasIndex("productId");

                    b.ToTable("DetailOD");
                });

            modelBuilder.Entity("JZenoApp.Models.NewsModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("NewsModel");
                });

            modelBuilder.Entity("JZenoApp.Models.Partner", b =>
                {
                    b.Property<string>("partnerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("partnerId");

                    b.HasIndex("Id");

                    b.ToTable("Partner");

                    b.HasData(
                        new
                        {
                            partnerId = "5215212-mx18-4213-h6d1-420b466e4502",
                            dateCreated = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6341),
                            description = "Chưa Cập Nhật",
                            image = "default_avt.png",
                            isActive = true,
                            name = "Cửa Hàng A"
                        },
                        new
                        {
                            partnerId = "5dfgsg2-mx18-4213-h6d1-420b466e4502",
                            dateCreated = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6362),
                            description = "Chưa Cập Nhật",
                            image = "default_avt.png",
                            isActive = true,
                            name = "Cửa Hàng B"
                        },
                        new
                        {
                            partnerId = "9f15d62-mx18-4213-h6d1-fdsafdsafdsd",
                            dateCreated = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6377),
                            description = "Chưa Cập Nhật",
                            image = "default_avt.png",
                            isActive = true,
                            name = "Cửa Hàng C"
                        },
                        new
                        {
                            partnerId = "iosxiof-mx18-4213-h6d1-420b466e4502",
                            dateCreated = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6379),
                            description = "Chưa Cập Nhật",
                            image = "default_avt.png",
                            isActive = true,
                            name = "Cửa Hàng D"
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("categoryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("discount")
                        .HasColumnType("int");

                    b.Property<bool?>("isPublish")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("partnerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("postDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<int?>("sold")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("categoryID");

                    b.HasIndex("partnerID");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = "shirt1",
                            categoryID = "shirt",
                            description = "Áo thun nam là một loại trang phục phổ biến dành cho nam giới. Áo được làm từ chất liệu cotton mềm mại, thấm hút mồ hôi tốt, mang lại cảm giác thoải mái cho người mặc. Áo thun nam có nhiều kiểu dáng, màu sắc và họa tiết khác nhau, phù hợp với nhiều phong cách thời trang.",
                            discount = 10,
                            isPublish = true,
                            name = "Áo thun nam",
                            partnerID = "5215212-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6676),
                            price = 50000.0
                        },
                        new
                        {
                            Id = "short1",
                            categoryID = "short",
                            description = "Quần short nam là một loại quần dáng ngắn, từ đầu gối trở lên, được thiết kế cho nam giới. Quần short nam thường được làm từ các chất liệu thoáng mát, thấm hút mồ hôi tốt như cotton, kaki, jean,... Quần short nam có nhiều kiểu dáng và mẫu mã khác nhau, phù hợp với nhiều phong cách thời trang.",
                            discount = 20,
                            isPublish = true,
                            name = "Quần Short nam",
                            partnerID = "5215212-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6684),
                            price = 30000.0
                        },
                        new
                        {
                            Id = "shoes1",
                            categoryID = "shoes",
                            description = "Giày thể thao nam là loại giày được thiết kế chủ yếu để phục vụ cho các hoạt động thể thao, thể dục hoặc các hoạt động ngoài trời. Tuy nhiên, ngày nay, giày thể thao nam cũng được sử dụng phổ biến trong đời sống hàng ngày, bởi sự thoải mái, năng động và cá tính của nó.",
                            discount = 30,
                            isPublish = true,
                            name = "Giày thể thao nam",
                            partnerID = "5215212-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6688),
                            price = 120000.0
                        },
                        new
                        {
                            Id = "camera1",
                            categoryID = "camera",
                            description = "Máy ảnh là một thiết bị dùng để ghi lại hình ảnh của thế giới xung quanh. Máy ảnh có thể được chia thành hai loại chính là máy ảnh phim và máy ảnh kỹ thuật số. Máy ảnh phim sử dụng phim ảnh để ghi lại hình ảnh. Phim ảnh là một loại vật liệu nhạy sáng, khi ánh sáng đi qua ống kính sẽ được ghi lại trên phim. Sau đó, phim ảnh cần được mang đi tráng rửa để cho ra một bức ảnh. Máy ảnh kỹ thuật số sử dụng cảm biến điện tử để ghi lại hình ảnh. Cảm biến điện tử sẽ chuyển đổi ánh sáng thành các tín hiệu điện, sau đó các tín hiệu điện này sẽ được lưu trữ dưới dạng file ảnh kỹ thuật số. Máy ảnh có thể được sử dụng để ghi lại những khoảnh khắc quan trọng trong cuộc sống, để lưu giữ những kỷ niệm đẹp, hoặc để thể hiện khả năng sáng tạo của người chụp.",
                            discount = 40,
                            isPublish = true,
                            name = "Máy ảnh",
                            partnerID = "5215212-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6692),
                            price = 5000000.0
                        },
                        new
                        {
                            Id = "shirt2",
                            categoryID = "shirt",
                            description = "Áo sơ mi nữ là một loại trang phục có cổ, tay áo và hàng nút phía trước, dành cho phụ nữ. Áo sơ mi nữ có thể được làm từ nhiều loại vải khác nhau, bao gồm cotton, lanh, lụa, polyester, v.v. Áo sơ mi nữ thường có màu sắc trung tính như trắng, đen, xanh dương, v.v., nhưng cũng có thể có màu sắc sặc sỡ hơn.",
                            discount = 35,
                            isPublish = true,
                            name = "Áo sơ mi nữ",
                            partnerID = "5dfgsg2-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6696),
                            price = 70000.0
                        },
                        new
                        {
                            Id = "trouser2",
                            categoryID = "trouser",
                            description = "Quần dài nữ là một loại quần có chiều dài từ mắt cá chân trở lên, được thiết kế dành riêng cho phụ nữ. Quần dài nữ có nhiều kiểu dáng, chất liệu và màu sắc khác nhau, phù hợp với nhiều phong cách thời trang và mục đích sử dụng.",
                            discount = 25,
                            isPublish = true,
                            name = "Quần dài nữ",
                            partnerID = "5dfgsg2-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6699),
                            price = 50000.0
                        },
                        new
                        {
                            Id = "sandal2",
                            categoryID = "sandal",
                            description = "Giày sandal nữ là một loại giày dép có quai dép đan chéo hoặc buộc xung quanh bàn chân và mắt cá chân. Giày sandal nữ có nhiều loại, từ sandal đế bệt đến sandal đế cao gót, từ sandal quai mảnh đến sandal quai bản to. Giày sandal nữ được làm từ nhiều chất liệu khác nhau, từ da, vải, nhựa đến cao su.",
                            discount = 15,
                            isPublish = true,
                            name = "Giày sandal nữ",
                            partnerID = "5dfgsg2-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6703),
                            price = 100000.0
                        },
                        new
                        {
                            Id = "phone2",
                            categoryID = "phone",
                            description = "Điện thoại thông minh (smartphone) là một loại thiết bị di động kết hợp điện thoại di động, máy tính cá nhân và các chức năng điện toán di động khác vào một thiết bị. Smartphone có thể thực hiện các chức năng cơ bản của điện thoại di động, chẳng hạn như thực hiện và nhận cuộc gọi, gửi và nhận tin nhắn văn bản, và truy cập Internet. Ngoài ra, smartphone còn có thể chạy các ứng dụng, chơi game, và thực hiện nhiều tác vụ khác.",
                            discount = 5,
                            isPublish = true,
                            name = "Điện thoại",
                            partnerID = "5dfgsg2-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6707),
                            price = 7500000.0
                        },
                        new
                        {
                            Id = "shirt3",
                            categoryID = "shirt",
                            description = "Áo sơ mi nam là một loại áo được làm từ vải cotton, linen, hoặc polyester, có cổ áo, tay áo, và khuy áo. Áo sơ mi nam thường được mặc trong các dịp trang trọng, như đi làm, đi dự tiệc, hoặc đi gặp đối tác. Áo sơ mi nam có nhiều kiểu dáng và màu sắc khác nhau, phù hợp với nhiều phong cách thời trang.",
                            discount = 55,
                            isPublish = true,
                            name = "Áo sơ mi nam",
                            partnerID = "9f15d62-mx18-4213-h6d1-fdsafdsafdsd",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6710),
                            price = 60000.0
                        },
                        new
                        {
                            Id = "trouser3",
                            categoryID = "trouser",
                            description = "Quần dài nam là một loại trang phục bao phủ phần thân dưới của cơ thể, từ thắt lưng đến mắt cá chân. Quần dài nam có nhiều kiểu dáng, chất liệu và màu sắc khác nhau, phù hợp với nhiều phong cách thời trang.",
                            discount = 45,
                            isPublish = true,
                            name = "Quần dài nam",
                            partnerID = "9f15d62-mx18-4213-h6d1-fdsafdsafdsd",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6713),
                            price = 40000.0
                        },
                        new
                        {
                            Id = "sandal3",
                            categoryID = "sandal",
                            description = "Giày sandal nam là loại giày có quai ngang đan chéo giữa các ngón chân, có thể có quai hậu ở gót hoặc không. Giày sandal nam thường được làm từ chất liệu da, vải, hoặc nhựa. Giày sandal nam có ưu điểm là thoáng mát, dễ đi, và phù hợp với nhiều trang phục khác nhau.",
                            discount = 35,
                            isPublish = true,
                            name = "Giày sandal nam",
                            partnerID = "9f15d62-mx18-4213-h6d1-fdsafdsafdsd",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6716),
                            price = 110000.0
                        },
                        new
                        {
                            Id = "watch3",
                            categoryID = "watch",
                            description = "Đồng hồ đeo tay là một chiếc đồng hồ được thiết kế để đeo trên cổ tay. Nó được điều khiển bởi một bộ máy cơ học hoặc điện tử và hiển thị thời gian bằng các kim hoặc màn hình điện tử. Đồng hồ đeo tay là một vật dụng thiết yếu trong cuộc sống hiện đại, được sử dụng để theo dõi thời gian, quản lý công việc và thể hiện phong cách cá nhân.",
                            discount = 25,
                            isPublish = true,
                            name = "Đồng hồ",
                            partnerID = "9f15d62-mx18-4213-h6d1-fdsafdsafdsd",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6719),
                            price = 500000.0
                        },
                        new
                        {
                            Id = "shirt4",
                            categoryID = "shirt",
                            description = "Áo thun nữ là một loại áo được làm từ chất liệu cotton, có kiểu dáng đơn giản, dễ mặc, dễ phối đồ. Áo thun nữ có thể được mặc trong nhiều dịp khác nhau, từ đi chơi, đi làm, đến tập thể thao.",
                            discount = 50,
                            isPublish = true,
                            name = "Áo thun nữ",
                            partnerID = "iosxiof-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6723),
                            price = 80000.0
                        },
                        new
                        {
                            Id = "short4",
                            categoryID = "short",
                            description = "Quần short nữ là một loại quần ngắn, thường có chiều dài đến đầu gối hoặc trên đầu gối. Quần short nữ có thể được làm từ nhiều chất liệu khác nhau, như cotton, denim, kaki,... Quần short nữ thường được mặc trong những dịp thoải mái, như đi chơi, đi dạo,...",
                            discount = 40,
                            isPublish = true,
                            name = "Quần Short nữ",
                            partnerID = "iosxiof-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6726),
                            price = 60000.0
                        },
                        new
                        {
                            Id = "shoes4",
                            categoryID = "shoes",
                            description = "Giày thể thao nữ là loại giày được thiết kế dành riêng cho nữ giới, thường được sử dụng để tập thể dục, thể thao, hay đơn giản là để đi lại hàng ngày. Giày thể thao nữ có đặc điểm chung là đế cao su mềm, có độ bám tốt, giúp người sử dụng di chuyển dễ dàng và thoải mái. Ngoài ra, giày thể thao nữ còn có phần thân giày được làm từ nhiều chất liệu khác nhau, như da, vải, hay nhựa, tùy theo sở thích và nhu cầu của người sử dụng.",
                            discount = 30,
                            isPublish = true,
                            name = "Giày thể thao nữ",
                            partnerID = "iosxiof-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6729),
                            price = 130000.0
                        },
                        new
                        {
                            Id = "computer4",
                            categoryID = "computer",
                            description = "Máy tính là một thiết bị điện tử có thể thực hiện các phép tính và xử lý thông tin theo một chương trình được viết sẵn. Máy tính có thể được sử dụng cho nhiều mục đích khác nhau, bao gồm tính toán, soạn thảo văn bản, chơi game, nghe nhạc, xem phim, v.v.",
                            discount = 20,
                            isPublish = true,
                            name = "Máy tính",
                            partnerID = "iosxiof-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(6732),
                            price = 10000000.0
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.ProductColor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("ProductColor");

                    b.HasData(
                        new
                        {
                            Id = "whiteshirt1",
                            Name = "Trắng",
                            productId = "shirt1"
                        },
                        new
                        {
                            Id = "blackshirt1",
                            Name = "Đen",
                            productId = "shirt1"
                        },
                        new
                        {
                            Id = "redshort1",
                            Name = "Đỏ",
                            productId = "short1"
                        },
                        new
                        {
                            Id = "blueshort1",
                            Name = "Xanh Dương",
                            productId = "short1"
                        },
                        new
                        {
                            Id = "blackshoes1",
                            Name = "Đen",
                            productId = "shoes1"
                        },
                        new
                        {
                            Id = "whiteshoes1",
                            Name = "Trắng",
                            productId = "shoes1"
                        },
                        new
                        {
                            Id = "blackcamera1",
                            Name = "Đen",
                            productId = "camera1"
                        },
                        new
                        {
                            Id = "whitecamera1",
                            Name = "Trắng",
                            productId = "camera1"
                        },
                        new
                        {
                            Id = "yellowshirt2",
                            Name = "Vàng",
                            productId = "shirt2"
                        },
                        new
                        {
                            Id = "greenshirt2",
                            Name = "Xanh Lá",
                            productId = "shirt2"
                        },
                        new
                        {
                            Id = "whitetrouser2",
                            Name = "Trắng",
                            productId = "trouser2"
                        },
                        new
                        {
                            Id = "pinktrouser2",
                            Name = "Hồng",
                            productId = "trouser2"
                        },
                        new
                        {
                            Id = "bluesandal2",
                            Name = "Xanh Dương",
                            productId = "sandal2"
                        },
                        new
                        {
                            Id = "greensandal2",
                            Name = "Xanh Lá",
                            productId = "sandal2"
                        },
                        new
                        {
                            Id = "bluephone2",
                            Name = "Xanh Dương",
                            productId = "phone2"
                        },
                        new
                        {
                            Id = "naturalphone2",
                            Name = "Tự Nhiên",
                            productId = "phone2"
                        },
                        new
                        {
                            Id = "blackshirt3",
                            Name = "Đen",
                            productId = "shirt3"
                        },
                        new
                        {
                            Id = "whiteshirt3",
                            Name = "Trắng",
                            productId = "shirt3"
                        },
                        new
                        {
                            Id = "blacktrouser3",
                            Name = "Đen",
                            productId = "trouser3"
                        },
                        new
                        {
                            Id = "whitetrouser3",
                            Name = "Trắng",
                            productId = "trouser3"
                        },
                        new
                        {
                            Id = "brownsandal3",
                            Name = "Nâu",
                            productId = "sandal3"
                        },
                        new
                        {
                            Id = "greensandal3",
                            Name = "Xanh Lá",
                            productId = "sandal3"
                        },
                        new
                        {
                            Id = "pinkwatch3",
                            Name = "Hồng",
                            productId = "watch3"
                        },
                        new
                        {
                            Id = "whitewatch3",
                            Name = "Trắng",
                            productId = "watch3"
                        },
                        new
                        {
                            Id = "greyshirt4",
                            Name = "Xám",
                            productId = "shirt4"
                        },
                        new
                        {
                            Id = "pinkshirt4",
                            Name = "Hồng",
                            productId = "shirt4"
                        },
                        new
                        {
                            Id = "blackshort4",
                            Name = "Đen",
                            productId = "short4"
                        },
                        new
                        {
                            Id = "blueshort4",
                            Name = "Xanh Dương",
                            productId = "short4"
                        },
                        new
                        {
                            Id = "purpleshoes4",
                            Name = "Tím",
                            productId = "shoes4"
                        },
                        new
                        {
                            Id = "pinkshoes4",
                            Name = "Hồng",
                            productId = "shoes4"
                        },
                        new
                        {
                            Id = "bluecomputer4",
                            Name = "Xanh Dương",
                            productId = "computer4"
                        },
                        new
                        {
                            Id = "blackcomputer4",
                            Name = "Đen",
                            productId = "computer4"
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.ProductComment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("comment")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("dateCmt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("evaluate")
                        .HasColumnType("int");

                    b.Property<bool?>("isComment")
                        .HasColumnType("bit");

                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("userName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("productId");

                    b.HasIndex("userId");

                    b.ToTable("ProductComment");
                });

            modelBuilder.Entity("JZenoApp.Models.ProductImage", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("ProductImage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            URL = "shirt1_white.jpg",
                            productId = "shirt1"
                        },
                        new
                        {
                            Id = 2,
                            URL = "shirt1_black.jpg",
                            productId = "shirt1"
                        },
                        new
                        {
                            Id = 3,
                            URL = "short1_blue.jpg",
                            productId = "short1"
                        },
                        new
                        {
                            Id = 4,
                            URL = "short1_red.jpg",
                            productId = "short1"
                        },
                        new
                        {
                            Id = 5,
                            URL = "shoes1_black.jpg",
                            productId = "shoes1"
                        },
                        new
                        {
                            Id = 6,
                            URL = "shoes1_white.jpg",
                            productId = "shoes1"
                        },
                        new
                        {
                            Id = 7,
                            URL = "camera1_black.jpg",
                            productId = "camera1"
                        },
                        new
                        {
                            Id = 8,
                            URL = "camera1_white.jpg",
                            productId = "camera1"
                        },
                        new
                        {
                            Id = 9,
                            URL = "shirt2_yellow.jpg",
                            productId = "shirt2"
                        },
                        new
                        {
                            Id = 10,
                            URL = "shirt2_green.jpg",
                            productId = "shirt2"
                        },
                        new
                        {
                            Id = 11,
                            URL = "trouser2_white.jpg",
                            productId = "trouser2"
                        },
                        new
                        {
                            Id = 12,
                            URL = "trouser2_pink.jpg",
                            productId = "trouser2"
                        },
                        new
                        {
                            Id = 13,
                            URL = "sandal2_blue.jpg",
                            productId = "sandal2"
                        },
                        new
                        {
                            Id = 14,
                            URL = "sandal2_green.jpg",
                            productId = "sandal2"
                        },
                        new
                        {
                            Id = 15,
                            URL = "phone2_blue.jpg",
                            productId = "phone2"
                        },
                        new
                        {
                            Id = 16,
                            URL = "phone2_natural.jpg",
                            productId = "phone2"
                        },
                        new
                        {
                            Id = 17,
                            URL = "shirt3_black.jpg",
                            productId = "shirt3"
                        },
                        new
                        {
                            Id = 18,
                            URL = "shirt3_white.jpg",
                            productId = "shirt3"
                        },
                        new
                        {
                            Id = 19,
                            URL = "trouser3_black.jpg",
                            productId = "trouser3"
                        },
                        new
                        {
                            Id = 20,
                            URL = "trouser3_white.jpg",
                            productId = "trouser3"
                        },
                        new
                        {
                            Id = 21,
                            URL = "sandal3_brown.jpg",
                            productId = "sandal3"
                        },
                        new
                        {
                            Id = 22,
                            URL = "sandal3_green.jpg",
                            productId = "sandal3"
                        },
                        new
                        {
                            Id = 23,
                            URL = "watch3_pink.jpg",
                            productId = "watch3"
                        },
                        new
                        {
                            Id = 24,
                            URL = "watch3_white.jpg",
                            productId = "watch3"
                        },
                        new
                        {
                            Id = 25,
                            URL = "shirt4_grey.jpg",
                            productId = "shirt4"
                        },
                        new
                        {
                            Id = 26,
                            URL = "shirt4_pink.jpg",
                            productId = "shirt4"
                        },
                        new
                        {
                            Id = 27,
                            URL = "short4_black.jpg",
                            productId = "short4"
                        },
                        new
                        {
                            Id = 28,
                            URL = "short4_blue.jpg",
                            productId = "short4"
                        },
                        new
                        {
                            Id = 29,
                            URL = "shoes4_purple.jpg",
                            productId = "shoes4"
                        },
                        new
                        {
                            Id = 30,
                            URL = "shoes4_pink.jpg",
                            productId = "shoes4"
                        },
                        new
                        {
                            Id = 31,
                            URL = "computer4_blue.jpg",
                            productId = "computer4"
                        },
                        new
                        {
                            Id = 32,
                            URL = "computer4_black.jpg",
                            productId = "computer4"
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.ProductSize", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("productColorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("productColorId");

                    b.ToTable("ProductSize");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            name = "S",
                            productColorId = "whiteshirt1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 2,
                            name = "M",
                            productColorId = "whiteshirt1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 3,
                            name = "L",
                            productColorId = "whiteshirt1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 4,
                            name = "XL",
                            productColorId = "whiteshirt1",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 5,
                            name = "S",
                            productColorId = "blackshirt1",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 6,
                            name = "M",
                            productColorId = "blackshirt1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 7,
                            name = "L",
                            productColorId = "blackshirt1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 8,
                            name = "XL",
                            productColorId = "blackshirt1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 9,
                            name = "S",
                            productColorId = "redshort1",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 10,
                            name = "M",
                            productColorId = "redshort1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 11,
                            name = "L",
                            productColorId = "redshort1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 12,
                            name = "XL",
                            productColorId = "redshort1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 13,
                            name = "S",
                            productColorId = "blueshort1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 14,
                            name = "M",
                            productColorId = "blueshort1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 15,
                            name = "L",
                            productColorId = "blueshort1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 16,
                            name = "XL",
                            productColorId = "blueshort1",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 17,
                            name = "39",
                            productColorId = "blackshoes1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 18,
                            name = "40",
                            productColorId = "blackshoes1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 19,
                            name = "41",
                            productColorId = "blackshoes1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 20,
                            name = "42",
                            productColorId = "blackshoes1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 21,
                            name = "43",
                            productColorId = "blackshoes1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 22,
                            name = "44",
                            productColorId = "blackshoes1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 23,
                            name = "39",
                            productColorId = "whiteshoes1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 24,
                            name = "40",
                            productColorId = "whiteshoes1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 25,
                            name = "41",
                            productColorId = "whiteshoes1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 26,
                            name = "42",
                            productColorId = "whiteshoes1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 27,
                            name = "43",
                            productColorId = "whiteshoes1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 28,
                            name = "44",
                            productColorId = "whiteshoes1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 29,
                            name = "S",
                            productColorId = "yellowshirt2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 30,
                            name = "M",
                            productColorId = "yellowshirt2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 31,
                            name = "L",
                            productColorId = "yellowshirt2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 32,
                            name = "XL",
                            productColorId = "yellowshirt2",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 33,
                            name = "S",
                            productColorId = "greenshirt2",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 34,
                            name = "M",
                            productColorId = "greenshirt2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 35,
                            name = "L",
                            productColorId = "greenshirt2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 36,
                            name = "XL",
                            productColorId = "greenshirt2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 37,
                            name = "S",
                            productColorId = "whitetrouser2",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 38,
                            name = "M",
                            productColorId = "whitetrouser2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 39,
                            name = "L",
                            productColorId = "whitetrouser2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 40,
                            name = "XL",
                            productColorId = "whitetrouser2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 41,
                            name = "S",
                            productColorId = "pinktrouser2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 42,
                            name = "M",
                            productColorId = "pinktrouser2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 43,
                            name = "L",
                            productColorId = "pinktrouser2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 44,
                            name = "XL",
                            productColorId = "pinktrouser2",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 45,
                            name = "39",
                            productColorId = "bluesandal2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 46,
                            name = "40",
                            productColorId = "bluesandal2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 47,
                            name = "41",
                            productColorId = "bluesandal2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 48,
                            name = "42",
                            productColorId = "bluesandal2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 49,
                            name = "43",
                            productColorId = "bluesandal2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 50,
                            name = "44",
                            productColorId = "bluesandal2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 51,
                            name = "39",
                            productColorId = "greensandal2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 52,
                            name = "40",
                            productColorId = "greensandal2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 53,
                            name = "41",
                            productColorId = "greensandal2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 54,
                            name = "42",
                            productColorId = "greensandal2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 55,
                            name = "43",
                            productColorId = "greensandal2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 56,
                            name = "44",
                            productColorId = "greensandal2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 57,
                            name = "S",
                            productColorId = "blackshirt3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 58,
                            name = "M",
                            productColorId = "blackshirt3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 59,
                            name = "L",
                            productColorId = "blackshirt3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 60,
                            name = "XL",
                            productColorId = "blackshirt3",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 61,
                            name = "S",
                            productColorId = "whiteshirt3",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 62,
                            name = "M",
                            productColorId = "whiteshirt3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 63,
                            name = "L",
                            productColorId = "whiteshirt3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 64,
                            name = "XL",
                            productColorId = "whiteshirt3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 65,
                            name = "S",
                            productColorId = "blacktrouser3",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 66,
                            name = "M",
                            productColorId = "blacktrouser3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 67,
                            name = "L",
                            productColorId = "blacktrouser3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 68,
                            name = "XL",
                            productColorId = "blacktrouser3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 69,
                            name = "S",
                            productColorId = "whitetrouser3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 70,
                            name = "M",
                            productColorId = "whitetrouser3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 71,
                            name = "L",
                            productColorId = "whitetrouser3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 72,
                            name = "XL",
                            productColorId = "whitetrouser3",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 73,
                            name = "39",
                            productColorId = "brownsandal3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 74,
                            name = "40",
                            productColorId = "brownsandal3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 75,
                            name = "41",
                            productColorId = "brownsandal3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 76,
                            name = "42",
                            productColorId = "brownsandal3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 77,
                            name = "43",
                            productColorId = "brownsandal3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 78,
                            name = "44",
                            productColorId = "brownsandal3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 79,
                            name = "39",
                            productColorId = "greensandal3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 80,
                            name = "40",
                            productColorId = "greensandal3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 81,
                            name = "41",
                            productColorId = "greensandal3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 82,
                            name = "42",
                            productColorId = "greensandal3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 83,
                            name = "43",
                            productColorId = "greensandal3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 84,
                            name = "44",
                            productColorId = "greensandal3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 85,
                            name = "S",
                            productColorId = "greyshirt4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 86,
                            name = "M",
                            productColorId = "greyshirt4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 87,
                            name = "L",
                            productColorId = "greyshirt4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 88,
                            name = "XL",
                            productColorId = "greyshirt4",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 89,
                            name = "S",
                            productColorId = "pinkshirt4",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 90,
                            name = "M",
                            productColorId = "pinkshirt4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 91,
                            name = "L",
                            productColorId = "pinkshirt4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 92,
                            name = "XL",
                            productColorId = "pinkshirt4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 93,
                            name = "S",
                            productColorId = "blackshort4",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 94,
                            name = "M",
                            productColorId = "blackshort4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 95,
                            name = "L",
                            productColorId = "blackshort4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 96,
                            name = "XL",
                            productColorId = "blackshort4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 97,
                            name = "S",
                            productColorId = "blueshort4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 98,
                            name = "M",
                            productColorId = "blueshort4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 99,
                            name = "L",
                            productColorId = "blueshort4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 100,
                            name = "XL",
                            productColorId = "blueshort4",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 101,
                            name = "39",
                            productColorId = "purpleshoes4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 102,
                            name = "40",
                            productColorId = "purpleshoes4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 103,
                            name = "41",
                            productColorId = "purpleshoes4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 104,
                            name = "42",
                            productColorId = "purpleshoes4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 105,
                            name = "43",
                            productColorId = "purpleshoes4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 106,
                            name = "44",
                            productColorId = "purpleshoes4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 107,
                            name = "39",
                            productColorId = "pinkshoes4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 108,
                            name = "40",
                            productColorId = "pinkshoes4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 109,
                            name = "41",
                            productColorId = "pinkshoes4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 110,
                            name = "42",
                            productColorId = "pinkshoes4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 111,
                            name = "43",
                            productColorId = "pinkshoes4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 112,
                            name = "44",
                            productColorId = "pinkshoes4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 113,
                            name = "64GB",
                            productColorId = "blackcamera1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 114,
                            name = "128GB",
                            productColorId = "blackcamera1",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 115,
                            name = "8RAM-128GB",
                            productColorId = "blackcomputer4",
                            quantity = 10.0
                        },
                        new
                        {
                            Id = 116,
                            name = "8RAM-128GB",
                            productColorId = "bluecomputer4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 117,
                            name = "64GB",
                            productColorId = "bluephone2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 118,
                            name = "128GB",
                            productColorId = "bluephone2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 119,
                            name = "64GB",
                            productColorId = "naturalphone2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 120,
                            name = "128GB",
                            productColorId = "naturalphone2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 121,
                            name = "64GB",
                            productColorId = "whitecamera1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 122,
                            name = "128GB",
                            productColorId = "whitecamera1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 123,
                            name = "64GB",
                            productColorId = "whitewatch3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 124,
                            name = "64GB",
                            productColorId = "pinkwatch3",
                            quantity = 30.0
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("fullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("partnerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.HasIndex("partnerId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "a79e98b4-d8a6-4640-98eb-5b417ffb2661",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "69363b1b-7f75-447f-bfc6-e6077a8ee65b",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJxg8iob1bo91+xOWwRKt44yrhm1NpiqLDEetoeMy7yL0C3Xl5vzcRz+BInW8MY+Hg==",
                            PhoneNumber = "0582072743",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2debf983-a3d0-459f-ab8b-8bbf85f6c7c4",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com",
                            address = "Tắc Vân - Cà Mau",
                            dateCreated = new DateTime(2023, 11, 11, 10, 43, 47, 562, DateTimeKind.Local).AddTicks(1782),
                            fullName = "Trần Viễn Đại",
                            image = "shobee-logo.png"
                        },
                        new
                        {
                            Id = "5215212-mx18-4213-h6d1-420b466e4502",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "20f3e18e-f277-4a78-8f5a-e22e6d819a76",
                            Email = "partner1@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "PARTNER1@GMAIL.COM",
                            NormalizedUserName = "PARTNER1@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKQhJeu2zp68yp0hRBB578FZeK9DgE3i/5lVRvr/AT6FP/V0dgTHL26Fsr+yqubkBg==",
                            PhoneNumber = "0582012351",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dd2553b1-a027-4d93-96f0-5bcccb21adc6",
                            TwoFactorEnabled = false,
                            UserName = "partner1@gmail.com",
                            address = "Bình Chánh - Hồ Chí Minh",
                            dateCreated = new DateTime(2023, 11, 11, 10, 43, 47, 664, DateTimeKind.Local).AddTicks(9311),
                            fullName = "Đối Tác Một",
                            image = "shobee-logo.png"
                        },
                        new
                        {
                            Id = "5dfgsg2-mx18-4213-h6d1-420b466e4502",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "95923a3f-2776-456a-b4f6-3916beae923d",
                            Email = "partner2@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "PARTNER2@GMAIL.COM",
                            NormalizedUserName = "PARTNER2@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGon36R1p+yy84OnwPtmItfK9rpgyV8dznGdZVpaLNIFp1r7IWhJsaLFsuCNmQvwcQ==",
                            PhoneNumber = "0582015681",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9a9c9b10-c27a-4230-8400-6c5fd46200e3",
                            TwoFactorEnabled = false,
                            UserName = "partner2@gmail.com",
                            address = "Trảng Bom - Đồng Nai",
                            dateCreated = new DateTime(2023, 11, 11, 10, 43, 47, 764, DateTimeKind.Local).AddTicks(6989),
                            fullName = "Đối Tác Hai",
                            image = "shobee-logo.png"
                        },
                        new
                        {
                            Id = "9f15d62-mx18-4213-h6d1-fdsafdsafdsd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2fd4d0f5-2d90-4431-a024-a8edec48bde6",
                            Email = "partner3@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "PARTNER3@GMAIL.COM",
                            NormalizedUserName = "PARTNER3@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGnldE1NtD1/oc6rLIKPgB9TNhyr94eMt9uWd7gB69EBNl+rVfptB3rhRNg56Kv35Q==",
                            PhoneNumber = "0582014561",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ba046b36-68f4-4b35-ac3c-28e6097fed2f",
                            TwoFactorEnabled = false,
                            UserName = "partner3@gmail.com",
                            address = "Quận 1 - Hồ Chí Minh",
                            dateCreated = new DateTime(2023, 11, 11, 10, 43, 47, 862, DateTimeKind.Local).AddTicks(8158),
                            fullName = "Đối Tác Ba",
                            image = "shobee-logo.png"
                        },
                        new
                        {
                            Id = "iosxiof-mx18-4213-h6d1-420b466e4502",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2b0b48ea-5e02-434f-b3ed-8467cb07d0c1",
                            Email = "partner4@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "PARTNER4@GMAIL.COM",
                            NormalizedUserName = "PARTNER4@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIJY5dr3cmK3nw4m3lzvjfXo52P7ZW4vQEKAa6xwnjwD/5iDM4X1Ccp0OBnztdOpTg==",
                            PhoneNumber = "0582753561",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f1092438-9bd5-4772-ae63-241d63a02577",
                            TwoFactorEnabled = false,
                            UserName = "partner4@gmail.com",
                            address = "Quận 10 - Hồ Chí Minh",
                            dateCreated = new DateTime(2023, 11, 11, 10, 43, 47, 969, DateTimeKind.Local).AddTicks(2276),
                            fullName = "Đối Tác Bốn",
                            image = "shobee-logo.png"
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.Voucher", b =>
                {
                    b.Property<int?>("voucherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("voucherID"));

                    b.Property<DateTime?>("endDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("price")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("startDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("voucherID");

                    b.HasIndex("name")
                        .IsUnique()
                        .HasFilter("[name] IS NOT NULL");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "07bf1560-b5ff-4702-a9f1-a64026e570cf",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "2ccdcef3-db18-46c7-b5ff-910be6ae4906",
                            Name = "Customer",
                            NormalizedName = "Customer"
                        },
                        new
                        {
                            Id = "5h45cxf3-mx18-4acb-h6d1-420b466e4502",
                            Name = "Partner",
                            NormalizedName = "Partner"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "a79e98b4-d8a6-4640-98eb-5b417ffb2661",
                            RoleId = "07bf1560-b5ff-4702-a9f1-a64026e570cf"
                        },
                        new
                        {
                            UserId = "5215212-mx18-4213-h6d1-420b466e4502",
                            RoleId = "5h45cxf3-mx18-4acb-h6d1-420b466e4502"
                        },
                        new
                        {
                            UserId = "5dfgsg2-mx18-4213-h6d1-420b466e4502",
                            RoleId = "5h45cxf3-mx18-4acb-h6d1-420b466e4502"
                        },
                        new
                        {
                            UserId = "9f15d62-mx18-4213-h6d1-fdsafdsafdsd",
                            RoleId = "5h45cxf3-mx18-4acb-h6d1-420b466e4502"
                        },
                        new
                        {
                            UserId = "iosxiof-mx18-4213-h6d1-420b466e4502",
                            RoleId = "5h45cxf3-mx18-4acb-h6d1-420b466e4502"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("JZenoApp.Models.Bill", b =>
                {
                    b.HasOne("JZenoApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("JZenoApp.Models.Voucher", "Voucher")
                        .WithMany("Bills")
                        .HasForeignKey("voucherID");

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("JZenoApp.Models.Chat", b =>
                {
                    b.HasOne("JZenoApp.Models.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("receiverId");

                    b.HasOne("JZenoApp.Models.User", "Sender")
                        .WithMany()
                        .HasForeignKey("senderId");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("JZenoApp.Models.ChatDetails", b =>
                {
                    b.HasOne("JZenoApp.Models.Chat", "Chat")
                        .WithMany("chats")
                        .HasForeignKey("chatId");

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("JZenoApp.Models.DetailOrder", b =>
                {
                    b.HasOne("JZenoApp.Models.Bill", "Bill")
                        .WithMany("detailsOrders")
                        .HasForeignKey("billID");

                    b.HasOne("JZenoApp.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("productId");

                    b.Navigation("Bill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JZenoApp.Models.NewsModel", b =>
                {
                    b.HasOne("JZenoApp.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("JZenoApp.Models.Partner", b =>
                {
                    b.HasOne("JZenoApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JZenoApp.Models.Product", b =>
                {
                    b.HasOne("JZenoApp.Models.Category", "Category")
                        .WithMany("products")
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JZenoApp.Models.Partner", "Partner")
                        .WithMany("products")
                        .HasForeignKey("partnerID");

                    b.Navigation("Category");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("JZenoApp.Models.ProductColor", b =>
                {
                    b.HasOne("JZenoApp.Models.Product", "product")
                        .WithMany("productColor")
                        .HasForeignKey("productId");

                    b.Navigation("product");
                });

            modelBuilder.Entity("JZenoApp.Models.ProductComment", b =>
                {
                    b.HasOne("JZenoApp.Models.Product", "product")
                        .WithMany("productComment")
                        .HasForeignKey("productId");

                    b.HasOne("JZenoApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("User");

                    b.Navigation("product");
                });

            modelBuilder.Entity("JZenoApp.Models.ProductImage", b =>
                {
                    b.HasOne("JZenoApp.Models.Product", "Product")
                        .WithMany("productImages")
                        .HasForeignKey("productId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JZenoApp.Models.ProductSize", b =>
                {
                    b.HasOne("JZenoApp.Models.ProductColor", "productColor")
                        .WithMany("productSize")
                        .HasForeignKey("productColorId");

                    b.Navigation("productColor");
                });

            modelBuilder.Entity("JZenoApp.Models.User", b =>
                {
                    b.HasOne("JZenoApp.Models.Partner", "Partner")
                        .WithMany()
                        .HasForeignKey("partnerId");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("JZenoApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("JZenoApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JZenoApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("JZenoApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JZenoApp.Models.Bill", b =>
                {
                    b.Navigation("detailsOrders");
                });

            modelBuilder.Entity("JZenoApp.Models.Category", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("JZenoApp.Models.Chat", b =>
                {
                    b.Navigation("chats");
                });

            modelBuilder.Entity("JZenoApp.Models.Partner", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("JZenoApp.Models.Product", b =>
                {
                    b.Navigation("productColor");

                    b.Navigation("productComment");

                    b.Navigation("productImages");
                });

            modelBuilder.Entity("JZenoApp.Models.ProductColor", b =>
                {
                    b.Navigation("productSize");
                });

            modelBuilder.Entity("JZenoApp.Models.Voucher", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
