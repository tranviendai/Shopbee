// <auto-generated />
using System;
using JZenoApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JZenoApp.Migrations
{
    [DbContext(typeof(JZenoDbContext))]
    [Migration("20231029131618_Database-Final")]
    partial class DatabaseFinal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JZenoApp.Models.Bill", b =>
                {
                    b.Property<string>("billID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("billStatic")
                        .HasColumnType("int");

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("deliveryForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("payment")
                        .HasColumnType("bit");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("voucherID")
                        .HasColumnType("int");

                    b.HasKey("billID");

                    b.HasIndex("UserId");

                    b.HasIndex("voucherID");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("JZenoApp.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = "shirt",
                            icon = "shirt.png",
                            name = "Shirt"
                        },
                        new
                        {
                            Id = "sandal",
                            icon = "sandal.png",
                            name = "Sandal"
                        },
                        new
                        {
                            Id = "shoes",
                            icon = "shoes.png",
                            name = "Shoes"
                        },
                        new
                        {
                            Id = "short",
                            icon = "shorts.png",
                            name = "Short"
                        },
                        new
                        {
                            Id = "trouser",
                            icon = "trousers.png",
                            name = "Trouser"
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.DetailOrder", b =>
                {
                    b.Property<int?>("odID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("odID"));

                    b.Property<string>("billID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<double?>("totalPrice")
                        .HasColumnType("float");

                    b.HasKey("odID");

                    b.HasIndex("billID");

                    b.HasIndex("productId");

                    b.ToTable("DetailOD");
                });

            modelBuilder.Entity("JZenoApp.Models.NewsModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("NewsModel");
                });

            modelBuilder.Entity("JZenoApp.Models.Partner", b =>
                {
                    b.Property<string>("partnerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("partnerId");

                    b.ToTable("Partner");

                    b.HasData(
                        new
                        {
                            partnerId = "5215212-mx18-4213-h6d1-420b466e4502",
                            dateCreated = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9097),
                            description = "Chưa Cập Nhật",
                            image = "default_avt.png",
                            isActive = true,
                            name = "Cửa Hàng A"
                        },
                        new
                        {
                            partnerId = "5dfgsg2-mx18-4213-h6d1-420b466e4502",
                            dateCreated = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9111),
                            description = "Chưa Cập Nhật",
                            image = "default_avt.png",
                            isActive = true,
                            name = "Cửa Hàng B"
                        },
                        new
                        {
                            partnerId = "9f15d62-mx18-4213-h6d1-fdsafdsafdsd",
                            dateCreated = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9113),
                            description = "Chưa Cập Nhật",
                            image = "default_avt.png",
                            isActive = true,
                            name = "Cửa Hàng C"
                        },
                        new
                        {
                            partnerId = "iosxiof-mx18-4213-h6d1-420b466e4502",
                            dateCreated = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9115),
                            description = "Chưa Cập Nhật",
                            image = "default_avt.png",
                            isActive = true,
                            name = "Cửa Hàng D"
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("categoryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("discount")
                        .HasColumnType("int");

                    b.Property<bool?>("isPublish")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("partnerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("postDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("categoryID");

                    b.HasIndex("partnerID");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = "shirt1",
                            categoryID = "shirt",
                            description = "Áo thun nam là một loại trang phục phổ biến dành cho nam giới. Áo được làm từ chất liệu cotton mềm mại, thấm hút mồ hôi tốt, mang lại cảm giác thoải mái cho người mặc. Áo thun nam có nhiều kiểu dáng, màu sắc và họa tiết khác nhau, phù hợp với nhiều phong cách thời trang.",
                            discount = 10,
                            isPublish = true,
                            name = "Áo thun nam",
                            partnerID = "5215212-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9236),
                            price = 50000.0
                        },
                        new
                        {
                            Id = "short1",
                            categoryID = "short",
                            description = "Quần short nam là một loại quần dáng ngắn, từ đầu gối trở lên, được thiết kế cho nam giới. Quần short nam thường được làm từ các chất liệu thoáng mát, thấm hút mồ hôi tốt như cotton, kaki, jean,... Quần short nam có nhiều kiểu dáng và mẫu mã khác nhau, phù hợp với nhiều phong cách thời trang.",
                            discount = 20,
                            isPublish = true,
                            name = "Quần Short nam",
                            partnerID = "5215212-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9242),
                            price = 30000.0
                        },
                        new
                        {
                            Id = "shoes1",
                            categoryID = "shoes",
                            description = "Giày thể thao nam là loại giày được thiết kế chủ yếu để phục vụ cho các hoạt động thể thao, thể dục hoặc các hoạt động ngoài trời. Tuy nhiên, ngày nay, giày thể thao nam cũng được sử dụng phổ biến trong đời sống hàng ngày, bởi sự thoải mái, năng động và cá tính của nó.",
                            discount = 30,
                            isPublish = true,
                            name = "Giày thể thao nam",
                            partnerID = "5215212-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9245),
                            price = 120000.0
                        },
                        new
                        {
                            Id = "shirt2",
                            categoryID = "shirt",
                            description = "Áo sơ mi nữ là một loại trang phục có cổ, tay áo và hàng nút phía trước, dành cho phụ nữ. Áo sơ mi nữ có thể được làm từ nhiều loại vải khác nhau, bao gồm cotton, lanh, lụa, polyester, v.v. Áo sơ mi nữ thường có màu sắc trung tính như trắng, đen, xanh dương, v.v., nhưng cũng có thể có màu sắc sặc sỡ hơn.",
                            discount = 35,
                            isPublish = true,
                            name = "Áo sơ mi nữ",
                            partnerID = "5dfgsg2-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9252),
                            price = 70000.0
                        },
                        new
                        {
                            Id = "trouser2",
                            categoryID = "trouser",
                            description = "Quần dài nữ là một loại quần có chiều dài từ mắt cá chân trở lên, được thiết kế dành riêng cho phụ nữ. Quần dài nữ có nhiều kiểu dáng, chất liệu và màu sắc khác nhau, phù hợp với nhiều phong cách thời trang và mục đích sử dụng.",
                            discount = 25,
                            isPublish = true,
                            name = "Quần dài nữ",
                            partnerID = "5dfgsg2-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9266),
                            price = 50000.0
                        },
                        new
                        {
                            Id = "sandal2",
                            categoryID = "sandal",
                            description = "Giày sandal nữ là một loại giày dép có quai dép đan chéo hoặc buộc xung quanh bàn chân và mắt cá chân. Giày sandal nữ có nhiều loại, từ sandal đế bệt đến sandal đế cao gót, từ sandal quai mảnh đến sandal quai bản to. Giày sandal nữ được làm từ nhiều chất liệu khác nhau, từ da, vải, nhựa đến cao su.",
                            discount = 15,
                            isPublish = true,
                            name = "Giày sandal nữ",
                            partnerID = "5dfgsg2-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9269),
                            price = 100000.0
                        },
                        new
                        {
                            Id = "shirt3",
                            categoryID = "shirt",
                            description = "Áo sơ mi nam là một loại áo được làm từ vải cotton, linen, hoặc polyester, có cổ áo, tay áo, và khuy áo. Áo sơ mi nam thường được mặc trong các dịp trang trọng, như đi làm, đi dự tiệc, hoặc đi gặp đối tác. Áo sơ mi nam có nhiều kiểu dáng và màu sắc khác nhau, phù hợp với nhiều phong cách thời trang.",
                            discount = 55,
                            isPublish = true,
                            name = "Áo sơ mi nam",
                            partnerID = "9f15d62-mx18-4213-h6d1-fdsafdsafdsd",
                            postDate = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9273),
                            price = 60000.0
                        },
                        new
                        {
                            Id = "trouser3",
                            categoryID = "trouser",
                            description = "Quần dài nam là một loại trang phục bao phủ phần thân dưới của cơ thể, từ thắt lưng đến mắt cá chân. Quần dài nam có nhiều kiểu dáng, chất liệu và màu sắc khác nhau, phù hợp với nhiều phong cách thời trang.",
                            discount = 45,
                            isPublish = true,
                            name = "Quần dài nam",
                            partnerID = "9f15d62-mx18-4213-h6d1-fdsafdsafdsd",
                            postDate = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9286),
                            price = 40000.0
                        },
                        new
                        {
                            Id = "sandal3",
                            categoryID = "sandal",
                            description = "Giày sandal nam là loại giày có quai ngang đan chéo giữa các ngón chân, có thể có quai hậu ở gót hoặc không. Giày sandal nam thường được làm từ chất liệu da, vải, hoặc nhựa. Giày sandal nam có ưu điểm là thoáng mát, dễ đi, và phù hợp với nhiều trang phục khác nhau.",
                            discount = 35,
                            isPublish = true,
                            name = "Giày sandal nam",
                            partnerID = "9f15d62-mx18-4213-h6d1-fdsafdsafdsd",
                            postDate = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9289),
                            price = 110000.0
                        },
                        new
                        {
                            Id = "shirt4",
                            categoryID = "shirt",
                            description = "Áo thun nữ là một loại áo được làm từ chất liệu cotton, có kiểu dáng đơn giản, dễ mặc, dễ phối đồ. Áo thun nữ có thể được mặc trong nhiều dịp khác nhau, từ đi chơi, đi làm, đến tập thể thao.",
                            discount = 50,
                            isPublish = true,
                            name = "Áo thun nữ",
                            partnerID = "iosxiof-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9292),
                            price = 80000.0
                        },
                        new
                        {
                            Id = "short4",
                            categoryID = "short",
                            description = "Quần short nữ là một loại quần ngắn, thường có chiều dài đến đầu gối hoặc trên đầu gối. Quần short nữ có thể được làm từ nhiều chất liệu khác nhau, như cotton, denim, kaki,... Quần short nữ thường được mặc trong những dịp thoải mái, như đi chơi, đi dạo,...",
                            discount = 40,
                            isPublish = true,
                            name = "Quần Short nữ",
                            partnerID = "iosxiof-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9295),
                            price = 60000.0
                        },
                        new
                        {
                            Id = "shoes4",
                            categoryID = "shoes",
                            description = "Giày thể thao nữ là loại giày được thiết kế dành riêng cho nữ giới, thường được sử dụng để tập thể dục, thể thao, hay đơn giản là để đi lại hàng ngày. Giày thể thao nữ có đặc điểm chung là đế cao su mềm, có độ bám tốt, giúp người sử dụng di chuyển dễ dàng và thoải mái. Ngoài ra, giày thể thao nữ còn có phần thân giày được làm từ nhiều chất liệu khác nhau, như da, vải, hay nhựa, tùy theo sở thích và nhu cầu của người sử dụng.",
                            discount = 30,
                            isPublish = true,
                            name = "Giày thể thao nữ",
                            partnerID = "iosxiof-mx18-4213-h6d1-420b466e4502",
                            postDate = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(9298),
                            price = 130000.0
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.ProductColor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("ProductColor");

                    b.HasData(
                        new
                        {
                            Id = "whiteshirt1",
                            Name = "Trắng",
                            productId = "shirt1"
                        },
                        new
                        {
                            Id = "blackshirt1",
                            Name = "Đen",
                            productId = "shirt1"
                        },
                        new
                        {
                            Id = "redshort1",
                            Name = "Đỏ",
                            productId = "short1"
                        },
                        new
                        {
                            Id = "blueshort1",
                            Name = "Xanh Dương",
                            productId = "short1"
                        },
                        new
                        {
                            Id = "blackshoes1",
                            Name = "Đen",
                            productId = "shoes1"
                        },
                        new
                        {
                            Id = "whiteshoes1",
                            Name = "Trắng",
                            productId = "shoes1"
                        },
                        new
                        {
                            Id = "yellowshirt2",
                            Name = "Vàng",
                            productId = "shirt2"
                        },
                        new
                        {
                            Id = "greenshirt2",
                            Name = "Xanh Lá",
                            productId = "shirt2"
                        },
                        new
                        {
                            Id = "whitetrouser2",
                            Name = "Trắng",
                            productId = "trouser2"
                        },
                        new
                        {
                            Id = "pinktrouser2",
                            Name = "Hồng",
                            productId = "trouser2"
                        },
                        new
                        {
                            Id = "bluesandal2",
                            Name = "Xanh Dương",
                            productId = "sandal2"
                        },
                        new
                        {
                            Id = "greensandal2",
                            Name = "Xanh Lá",
                            productId = "sandal2"
                        },
                        new
                        {
                            Id = "blackshirt3",
                            Name = "Đen",
                            productId = "shirt3"
                        },
                        new
                        {
                            Id = "whiteshirt3",
                            Name = "Trắng",
                            productId = "shirt3"
                        },
                        new
                        {
                            Id = "blacktrouser3",
                            Name = "Đen",
                            productId = "trouser3"
                        },
                        new
                        {
                            Id = "whitetrouser3",
                            Name = "Trắng",
                            productId = "trouser3"
                        },
                        new
                        {
                            Id = "brownsandal3",
                            Name = "Nâu",
                            productId = "sandal3"
                        },
                        new
                        {
                            Id = "greensandal3",
                            Name = "Xanh Lá",
                            productId = "sandal3"
                        },
                        new
                        {
                            Id = "greyshirt4",
                            Name = "Xám",
                            productId = "shirt4"
                        },
                        new
                        {
                            Id = "pinkshirt4",
                            Name = "Hồng",
                            productId = "shirt4"
                        },
                        new
                        {
                            Id = "blackshort4",
                            Name = "Đen",
                            productId = "short4"
                        },
                        new
                        {
                            Id = "blueshort4",
                            Name = "Xanh Dương",
                            productId = "short4"
                        },
                        new
                        {
                            Id = "purpleshoes4",
                            Name = "Tím",
                            productId = "shoes4"
                        },
                        new
                        {
                            Id = "pinkshoes4",
                            Name = "Hồng",
                            productId = "shoes4"
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.ProductComment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("comment")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("evaluate")
                        .HasColumnType("int");

                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("userName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("productId");

                    b.ToTable("ProductComment");
                });

            modelBuilder.Entity("JZenoApp.Models.ProductImage", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("ProductImage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            URL = "shirt1_white.jpg",
                            productId = "shirt1"
                        },
                        new
                        {
                            Id = 2,
                            URL = "shirt1_black.jpg",
                            productId = "shirt1"
                        },
                        new
                        {
                            Id = 3,
                            URL = "short1_blue.jpg",
                            productId = "short1"
                        },
                        new
                        {
                            Id = 4,
                            URL = "short1_red.jpg",
                            productId = "short1"
                        },
                        new
                        {
                            Id = 5,
                            URL = "shoes1_black.jpg",
                            productId = "shoes1"
                        },
                        new
                        {
                            Id = 6,
                            URL = "shoes1_white.jpg",
                            productId = "shoes1"
                        },
                        new
                        {
                            Id = 7,
                            URL = "shirt2_yellow.jpg",
                            productId = "shirt2"
                        },
                        new
                        {
                            Id = 8,
                            URL = "shirt2_green.jpg",
                            productId = "shirt2"
                        },
                        new
                        {
                            Id = 9,
                            URL = "trouser2_white.jpg",
                            productId = "trouser2"
                        },
                        new
                        {
                            Id = 10,
                            URL = "trouser2_pink.jpg",
                            productId = "trouser2"
                        },
                        new
                        {
                            Id = 11,
                            URL = "sandal2_blue.jpg",
                            productId = "sandal2"
                        },
                        new
                        {
                            Id = 12,
                            URL = "sandal2_green.jpg",
                            productId = "sandal2"
                        },
                        new
                        {
                            Id = 13,
                            URL = "shirt3_black.jpg",
                            productId = "shirt3"
                        },
                        new
                        {
                            Id = 14,
                            URL = "shirt3_white.jpg",
                            productId = "shirt3"
                        },
                        new
                        {
                            Id = 15,
                            URL = "trouser3_black.jpg",
                            productId = "trouser3"
                        },
                        new
                        {
                            Id = 16,
                            URL = "trouser3_white.jpg",
                            productId = "trouser3"
                        },
                        new
                        {
                            Id = 17,
                            URL = "sandal3_brown.jpg",
                            productId = "sandal3"
                        },
                        new
                        {
                            Id = 18,
                            URL = "sandal3_green.jpg",
                            productId = "sandal3"
                        },
                        new
                        {
                            Id = 19,
                            URL = "shirt4_grey.jpg",
                            productId = "shirt4"
                        },
                        new
                        {
                            Id = 20,
                            URL = "shirt4_pink.jpg",
                            productId = "shirt4"
                        },
                        new
                        {
                            Id = 21,
                            URL = "short4_black.jpg",
                            productId = "short4"
                        },
                        new
                        {
                            Id = 22,
                            URL = "short4_blue.jpg",
                            productId = "short4"
                        },
                        new
                        {
                            Id = 23,
                            URL = "shoes4_purple.jpg",
                            productId = "shoes4"
                        },
                        new
                        {
                            Id = 24,
                            URL = "shoes4_pink.jpg",
                            productId = "shoes4"
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.ProductSize", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("name")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("productColorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("productColorId");

                    b.ToTable("ProductSize");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            name = "S",
                            productColorId = "whiteshirt1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 2,
                            name = "M",
                            productColorId = "whiteshirt1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 3,
                            name = "L",
                            productColorId = "whiteshirt1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 4,
                            name = "XL",
                            productColorId = "whiteshirt1",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 5,
                            name = "S",
                            productColorId = "blackshirt1",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 6,
                            name = "M",
                            productColorId = "blackshirt1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 7,
                            name = "L",
                            productColorId = "blackshirt1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 8,
                            name = "XL",
                            productColorId = "blackshirt1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 9,
                            name = "S",
                            productColorId = "redshort1",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 10,
                            name = "M",
                            productColorId = "redshort1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 11,
                            name = "L",
                            productColorId = "redshort1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 12,
                            name = "XL",
                            productColorId = "redshort1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 13,
                            name = "S",
                            productColorId = "blueshort1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 14,
                            name = "M",
                            productColorId = "blueshort1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 15,
                            name = "L",
                            productColorId = "blueshort1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 16,
                            name = "XL",
                            productColorId = "blueshort1",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 17,
                            name = "39",
                            productColorId = "blackshoes1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 18,
                            name = "40",
                            productColorId = "blackshoes1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 19,
                            name = "41",
                            productColorId = "blackshoes1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 20,
                            name = "42",
                            productColorId = "blackshoes1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 21,
                            name = "43",
                            productColorId = "blackshoes1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 22,
                            name = "44",
                            productColorId = "blackshoes1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 23,
                            name = "39",
                            productColorId = "whiteshoes1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 24,
                            name = "40",
                            productColorId = "whiteshoes1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 25,
                            name = "41",
                            productColorId = "whiteshoes1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 26,
                            name = "42",
                            productColorId = "whiteshoes1",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 27,
                            name = "43",
                            productColorId = "whiteshoes1",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 28,
                            name = "44",
                            productColorId = "whiteshoes1",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 29,
                            name = "S",
                            productColorId = "yellowshirt2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 30,
                            name = "M",
                            productColorId = "yellowshirt2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 31,
                            name = "L",
                            productColorId = "yellowshirt2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 32,
                            name = "XL",
                            productColorId = "yellowshirt2",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 33,
                            name = "S",
                            productColorId = "greenshirt2",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 34,
                            name = "M",
                            productColorId = "greenshirt2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 35,
                            name = "L",
                            productColorId = "greenshirt2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 36,
                            name = "XL",
                            productColorId = "greenshirt2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 37,
                            name = "S",
                            productColorId = "whitetrouser2",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 38,
                            name = "M",
                            productColorId = "whitetrouser2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 39,
                            name = "L",
                            productColorId = "whitetrouser2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 40,
                            name = "XL",
                            productColorId = "whitetrouser2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 41,
                            name = "S",
                            productColorId = "pinktrouser2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 42,
                            name = "M",
                            productColorId = "pinktrouser2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 43,
                            name = "L",
                            productColorId = "pinktrouser2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 44,
                            name = "XL",
                            productColorId = "pinktrouser2",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 45,
                            name = "39",
                            productColorId = "bluesandal2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 46,
                            name = "40",
                            productColorId = "bluesandal2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 47,
                            name = "41",
                            productColorId = "bluesandal2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 48,
                            name = "42",
                            productColorId = "bluesandal2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 49,
                            name = "43",
                            productColorId = "bluesandal2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 50,
                            name = "44",
                            productColorId = "bluesandal2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 51,
                            name = "39",
                            productColorId = "greensandal2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 52,
                            name = "40",
                            productColorId = "greensandal2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 53,
                            name = "41",
                            productColorId = "greensandal2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 54,
                            name = "42",
                            productColorId = "greensandal2",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 55,
                            name = "43",
                            productColorId = "greensandal2",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 56,
                            name = "44",
                            productColorId = "greensandal2",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 57,
                            name = "S",
                            productColorId = "blackshirt3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 58,
                            name = "M",
                            productColorId = "blackshirt3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 59,
                            name = "L",
                            productColorId = "blackshirt3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 60,
                            name = "XL",
                            productColorId = "blackshirt3",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 61,
                            name = "S",
                            productColorId = "whiteshirt3",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 62,
                            name = "M",
                            productColorId = "whiteshirt3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 63,
                            name = "L",
                            productColorId = "whiteshirt3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 64,
                            name = "XL",
                            productColorId = "whiteshirt3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 65,
                            name = "S",
                            productColorId = "blacktrouser3",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 66,
                            name = "M",
                            productColorId = "blacktrouser3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 67,
                            name = "L",
                            productColorId = "blacktrouser3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 68,
                            name = "XL",
                            productColorId = "blacktrouser3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 69,
                            name = "S",
                            productColorId = "whitetrouser3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 70,
                            name = "M",
                            productColorId = "whitetrouser3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 71,
                            name = "L",
                            productColorId = "whitetrouser3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 72,
                            name = "XL",
                            productColorId = "whitetrouser3",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 73,
                            name = "39",
                            productColorId = "brownsandal3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 74,
                            name = "40",
                            productColorId = "brownsandal3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 75,
                            name = "41",
                            productColorId = "brownsandal3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 76,
                            name = "42",
                            productColorId = "brownsandal3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 77,
                            name = "43",
                            productColorId = "brownsandal3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 78,
                            name = "44",
                            productColorId = "brownsandal3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 79,
                            name = "39",
                            productColorId = "greensandal3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 80,
                            name = "40",
                            productColorId = "greensandal3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 81,
                            name = "41",
                            productColorId = "greensandal3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 82,
                            name = "42",
                            productColorId = "greensandal3",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 83,
                            name = "43",
                            productColorId = "greensandal3",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 84,
                            name = "44",
                            productColorId = "greensandal3",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 85,
                            name = "S",
                            productColorId = "greyshirt4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 86,
                            name = "M",
                            productColorId = "greyshirt4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 87,
                            name = "L",
                            productColorId = "greyshirt4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 88,
                            name = "XL",
                            productColorId = "greyshirt4",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 89,
                            name = "S",
                            productColorId = "pinkshirt4",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 90,
                            name = "M",
                            productColorId = "pinkshirt4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 91,
                            name = "L",
                            productColorId = "pinkshirt4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 92,
                            name = "XL",
                            productColorId = "pinkshirt4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 93,
                            name = "S",
                            productColorId = "blackshort4",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 94,
                            name = "M",
                            productColorId = "blackshort4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 95,
                            name = "L",
                            productColorId = "blackshort4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 96,
                            name = "XL",
                            productColorId = "blackshort4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 97,
                            name = "S",
                            productColorId = "blueshort4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 98,
                            name = "M",
                            productColorId = "blueshort4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 99,
                            name = "L",
                            productColorId = "blueshort4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 100,
                            name = "XL",
                            productColorId = "blueshort4",
                            quantity = 20.0
                        },
                        new
                        {
                            Id = 101,
                            name = "39",
                            productColorId = "purpleshoes4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 102,
                            name = "40",
                            productColorId = "purpleshoes4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 103,
                            name = "41",
                            productColorId = "purpleshoes4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 104,
                            name = "42",
                            productColorId = "purpleshoes4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 105,
                            name = "43",
                            productColorId = "purpleshoes4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 106,
                            name = "44",
                            productColorId = "purpleshoes4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 107,
                            name = "39",
                            productColorId = "pinkshoes4",
                            quantity = 30.0
                        },
                        new
                        {
                            Id = 108,
                            name = "40",
                            productColorId = "pinkshoes4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 109,
                            name = "41",
                            productColorId = "pinkshoes4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 110,
                            name = "42",
                            productColorId = "pinkshoes4",
                            quantity = 50.0
                        },
                        new
                        {
                            Id = 111,
                            name = "43",
                            productColorId = "pinkshoes4",
                            quantity = 40.0
                        },
                        new
                        {
                            Id = 112,
                            name = "44",
                            productColorId = "pinkshoes4",
                            quantity = 30.0
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("fullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "a79e98b4-d8a6-4640-98eb-5b417ffb2661",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e47f6157-75c1-469e-9eb6-0e0112ca29d6",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGXo+ke/qIZhszX1Lg7jydgl4G8NwwCErvjYoyFsfZwKbE1RvwAkn0CqGmA3+9vjjQ==",
                            PhoneNumber = "0582072743",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e67466b7-f816-4d19-807a-e697da33fd8f",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com",
                            address = "Tắc Vân - Cà Mau",
                            dateCreated = new DateTime(2023, 10, 29, 20, 16, 18, 455, DateTimeKind.Local).AddTicks(4895),
                            fullName = "Trần Viễn Đại",
                            image = "shobee-logo.png"
                        },
                        new
                        {
                            Id = "5215212-mx18-4213-h6d1-420b466e4502",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "258e7cc9-16f6-4224-97dc-f81fa3b776b5",
                            Email = "partner1@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "PARTNER1@GMAIL.COM",
                            NormalizedUserName = "PARTNER1@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDjcw0oYjtD8kmZKLkcA42y+28iJPqMbQ4UOYDtsww9yfmJaf5IXDQIjq6yoMrE1Mw==",
                            PhoneNumber = "0582012351",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "04934142-efdf-45a2-94ed-ee664f9fc478",
                            TwoFactorEnabled = false,
                            UserName = "partner1@gmail.com",
                            address = "Bình Chánh - Hồ Chí Minh",
                            dateCreated = new DateTime(2023, 10, 29, 20, 16, 18, 539, DateTimeKind.Local).AddTicks(6865),
                            fullName = "Đối Tác Một",
                            image = "shobee-logo.png"
                        },
                        new
                        {
                            Id = "5dfgsg2-mx18-4213-h6d1-420b466e4502",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "08d09cbf-ad51-49e8-95b6-820f1756cae4",
                            Email = "partner2@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "PARTNER2@GMAIL.COM",
                            NormalizedUserName = "PARTNER2@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEN8k21+mYUiLD0t4iaQfiX0hEU+7oqPMVHGoEpWP0WEIce8DQ+dfypzGCecp9aCXBg==",
                            PhoneNumber = "0582015681",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0840858b-3694-4b08-b2d7-bffce532f514",
                            TwoFactorEnabled = false,
                            UserName = "partner2@gmail.com",
                            address = "Trảng Bom - Đồng Nai",
                            dateCreated = new DateTime(2023, 10, 29, 20, 16, 18, 625, DateTimeKind.Local).AddTicks(1025),
                            fullName = "Đối Tác Hai",
                            image = "shobee-logo.png"
                        },
                        new
                        {
                            Id = "9f15d62-mx18-4213-h6d1-fdsafdsafdsd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4a56e061-0ae6-4e67-89d9-0fcf6709dc0b",
                            Email = "partner3@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "PARTNER3@GMAIL.COM",
                            NormalizedUserName = "PARTNER3@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKo9BJVq7NfFiLufpTTWZ4s053L9jhel+8sWLkXNkkYW+Sm00Aji8jYVS+kxBRaJAg==",
                            PhoneNumber = "0582014561",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f887f28f-adf5-4ad5-a376-736ca7bbb9b3",
                            TwoFactorEnabled = false,
                            UserName = "partner3@gmail.com",
                            address = "Quận 1 - Hồ Chí Minh",
                            dateCreated = new DateTime(2023, 10, 29, 20, 16, 18, 713, DateTimeKind.Local).AddTicks(1860),
                            fullName = "Đối Tác Ba",
                            image = "shobee-logo.png"
                        },
                        new
                        {
                            Id = "iosxiof-mx18-4213-h6d1-420b466e4502",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d82fa525-1430-4e99-99af-15589b6350a5",
                            Email = "partner4@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "PARTNER4@GMAIL.COM",
                            NormalizedUserName = "PARTNER4@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJ81ox8Rq0HShFVPZMgu+B/+qnGTFIU27mJOP9Jz/r84dE18lrNSDd/vwyasghfSSw==",
                            PhoneNumber = "0582753561",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d7c3fd8e-93ae-4a5a-ae72-96730b675a94",
                            TwoFactorEnabled = false,
                            UserName = "partner4@gmail.com",
                            address = "Quận 10 - Hồ Chí Minh",
                            dateCreated = new DateTime(2023, 10, 29, 20, 16, 18, 800, DateTimeKind.Local).AddTicks(4666),
                            fullName = "Đối Tác Bốn",
                            image = "shobee-logo.png"
                        });
                });

            modelBuilder.Entity("JZenoApp.Models.Voucher", b =>
                {
                    b.Property<int?>("voucherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("voucherID"));

                    b.Property<DateTime?>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("price")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("startDate")
                        .HasColumnType("datetime2");

                    b.HasKey("voucherID");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "07bf1560-b5ff-4702-a9f1-a64026e570cf",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "2ccdcef3-db18-46c7-b5ff-910be6ae4906",
                            Name = "Customer",
                            NormalizedName = "Customer"
                        },
                        new
                        {
                            Id = "5h45cxf3-mx18-4acb-h6d1-420b466e4502",
                            Name = "Partner",
                            NormalizedName = "Partner"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "a79e98b4-d8a6-4640-98eb-5b417ffb2661",
                            RoleId = "07bf1560-b5ff-4702-a9f1-a64026e570cf"
                        },
                        new
                        {
                            UserId = "5215212-mx18-4213-h6d1-420b466e4502",
                            RoleId = "5h45cxf3-mx18-4acb-h6d1-420b466e4502"
                        },
                        new
                        {
                            UserId = "5dfgsg2-mx18-4213-h6d1-420b466e4502",
                            RoleId = "5h45cxf3-mx18-4acb-h6d1-420b466e4502"
                        },
                        new
                        {
                            UserId = "9f15d62-mx18-4213-h6d1-fdsafdsafdsd",
                            RoleId = "5h45cxf3-mx18-4acb-h6d1-420b466e4502"
                        },
                        new
                        {
                            UserId = "iosxiof-mx18-4213-h6d1-420b466e4502",
                            RoleId = "5h45cxf3-mx18-4acb-h6d1-420b466e4502"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("JZenoApp.Models.Bill", b =>
                {
                    b.HasOne("JZenoApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("JZenoApp.Models.Voucher", "Voucher")
                        .WithMany("Bills")
                        .HasForeignKey("voucherID");

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("JZenoApp.Models.DetailOrder", b =>
                {
                    b.HasOne("JZenoApp.Models.Bill", null)
                        .WithMany("detailsOrders")
                        .HasForeignKey("billID");

                    b.HasOne("JZenoApp.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("productId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JZenoApp.Models.NewsModel", b =>
                {
                    b.HasOne("JZenoApp.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("JZenoApp.Models.Product", b =>
                {
                    b.HasOne("JZenoApp.Models.Category", "Category")
                        .WithMany("products")
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JZenoApp.Models.Partner", "Partner")
                        .WithMany("products")
                        .HasForeignKey("partnerID");

                    b.Navigation("Category");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("JZenoApp.Models.ProductColor", b =>
                {
                    b.HasOne("JZenoApp.Models.Product", "product")
                        .WithMany("productColor")
                        .HasForeignKey("productId");

                    b.Navigation("product");
                });

            modelBuilder.Entity("JZenoApp.Models.ProductComment", b =>
                {
                    b.HasOne("JZenoApp.Models.Product", "product")
                        .WithMany("productComment")
                        .HasForeignKey("productId");

                    b.Navigation("product");
                });

            modelBuilder.Entity("JZenoApp.Models.ProductImage", b =>
                {
                    b.HasOne("JZenoApp.Models.Product", "Product")
                        .WithMany("productImages")
                        .HasForeignKey("productId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JZenoApp.Models.ProductSize", b =>
                {
                    b.HasOne("JZenoApp.Models.ProductColor", "productColor")
                        .WithMany("productSize")
                        .HasForeignKey("productColorId");

                    b.Navigation("productColor");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("JZenoApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("JZenoApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JZenoApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("JZenoApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JZenoApp.Models.Bill", b =>
                {
                    b.Navigation("detailsOrders");
                });

            modelBuilder.Entity("JZenoApp.Models.Category", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("JZenoApp.Models.Partner", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("JZenoApp.Models.Product", b =>
                {
                    b.Navigation("productColor");

                    b.Navigation("productComment");

                    b.Navigation("productImages");
                });

            modelBuilder.Entity("JZenoApp.Models.ProductColor", b =>
                {
                    b.Navigation("productSize");
                });

            modelBuilder.Entity("JZenoApp.Models.Voucher", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
